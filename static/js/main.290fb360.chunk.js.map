{"version":3,"sources":["Todo.jsx","Main.jsx","Alert.jsx","App.jsx","index.js"],"names":["Todo","todos","handleComplete","handleRemove","handleEdit","className","map","index","title","id","hasCompleted","onClick","Main","handleSubmit","handleInput","value","onSubmit","type","onChange","placeholder","Alert","alert","setAlert","msg","styleClass","useEffect","removeAlert","setTimeout","show","clearTimeout","App","useState","todo","setTodo","localStorage","getItem","undefined","JSON","parse","setTodos","isEditing","setIsEditing","toEditTodoId","setToEditTodoId","setItem","stringify","showAlert","message","classToAdd","e","a","target","previous","preventDefault","item","Math","floor","random","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.290fb360.chunk.js","sourcesContent":["const Todo = ({ todos, handleComplete, handleRemove, handleEdit }) => {\r\n  return (\r\n    <div className=\"todos\">\r\n      {todos.map(({ title, id, hasCompleted }, index) => (\r\n        <div key={index} className=\"todo flex\">\r\n          {hasCompleted ? <span className=\"line\"></span> : \"\"}\r\n          <p>\r\n            <span>{index + 1}</span>&nbsp;&nbsp;{title}\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <i\r\n              onClick={handleEdit}\r\n              id={id}\r\n              className=\"fas fa-pencil-alt fa-1x edit\"\r\n            ></i>\r\n            <i\r\n              onClick={handleComplete}\r\n              id={id}\r\n              className=\"fas fa-check fa-1x completed\"\r\n            ></i>\r\n            <i\r\n              onClick={handleRemove}\r\n              id={id}\r\n              className=\"fas fa-times fa-1x delete\"\r\n            ></i>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","const Main = ({ handleSubmit, handleInput, value }) => {\r\n  return (\r\n    <main>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <input\r\n            value={value}\r\n            type=\"text\"\r\n            onChange={handleInput}\r\n            placeholder=\"What do you want to do?\"\r\n          />\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { useEffect } from \"react\";\r\n\r\nconst Alert = ({ alert, setAlert }) => {\r\n  const { msg, styleClass } = alert;\r\n\r\n  useEffect(() => {\r\n    const removeAlert = setTimeout(\r\n      () => setAlert({ show: false, msg: \"\", styleClass: \"\" }),\r\n      3000\r\n    );\r\n\r\n    return () => clearTimeout(removeAlert);\r\n  }, [alert]);\r\n\r\n  return (\r\n    <div className={styleClass ? `alert ${styleClass}` : \"alert\"}>\r\n      <h6>{msg}</h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./Todo\";\nimport Main from \"./Main\";\nimport Alert from \"./Alert\";\n\n// Fetching Todos from Local Storage(Chrome Browser's)\nconst getTodosFromLocalStorage = () => {\n  if (\n    localStorage.getItem(\"todos\") !== null &&\n    localStorage.getItem(\"todos\") !== undefined\n  ) {\n    return JSON.parse(localStorage.getItem(\"todos\"));\n  } else {\n    return [];\n  }\n};\n\nconst App = () => {\n  const [todo, setTodo] = useState({\n    id: 0,\n    title: \"\",\n    hasCompleted: false,\n  });\n\n  const [alert, setAlert] = useState({ show: false, msg: \"\", styleClass: \"\" });\n\n  const [todos, setTodos] = useState(getTodosFromLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [toEditTodoId, setToEditTodoId] = useState(null);\n\n  // Saving Todos in Local Storage whenever todos array changes\n  useEffect(() => localStorage.setItem(\"todos\", JSON.stringify(todos)), [\n    todos,\n  ]);\n\n  // Shows Alert Message\n  const showAlert = (message, classToAdd) => {\n    setAlert({ show: true, msg: message, styleClass: classToAdd });\n  };\n\n  // Edit A Todo\n  const handleEdit = (e) => {\n    const { id } = e.target;\n\n    setIsEditing(true);\n    setToEditTodoId(+id);\n    todos.map((item) => (item.id === +id ? (todo.title = item.title) : \"\"));\n  };\n\n  // Remove A Todo\n  const handleRemove = (e) => {\n    const { id } = e.target;\n    setTodos(todos.filter((todo) => todo.id !== +id));\n    showAlert(\"Successfully Deleted a todo !!\", \"success\");\n  };\n\n  // Toggleing hasCompleted\n  const handleComplete = async (e) => {\n    const { id } = e.target;\n\n    setTodos((previous) =>\n      previous.map((todo) => {\n        if (todo.id === +id) {\n          showAlert(\n            todo.hasCompleted ? \"Uncompleted!!\" : \"Completed!!\",\n            todo.hasCompleted ? \"error\" : \"success\"\n          );\n          return { ...todo, hasCompleted: !todo.hasCompleted };\n        } else {\n          return todo;\n        }\n      })\n    );\n  };\n\n  // Handling input\n  const handleInput = (e) => {\n    const { value } = e.target;\n    setTodo({ hasCompleted: false, title: value });\n  };\n\n  // Saving or updating  todo\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (todo.title !== \"\" && todo.title !== null && isEditing) {\n      setTodos(\n        todos.map((item) => {\n          if (item.id === toEditTodoId) {\n            setTodo({ ...todo, title: \"\" });\n            return { ...item, title: todo.title };\n          } else {\n            return item;\n          }\n        })\n      );\n\n      setTodo({\n        id: 0,\n        title: \"\",\n        hasCompleted: false,\n      });\n      showAlert(\"Successfully Updated a todo !!\", \"success\");\n\n      setIsEditing(false);\n      setToEditTodoId(null);\n    } else if (todo.title !== \"\" && todo.title !== null) {\n      setTodos([...todos, { ...todo, id: Math.floor(Math.random() * 100) }]);\n      showAlert(\"Successfully Added a todo !!\", \"success\");\n\n      e.target[0].value = \"\";\n      setTodo({\n        id: 0,\n        title: \"\",\n        hasCompleted: false,\n      });\n    } else {\n      showAlert(\"Input value cant't be empty!!\", \"error\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h4>Todo List Using React </h4>\n      </header>\n\n      <Main\n        handleSubmit={handleSubmit}\n        value={todo.title}\n        handleInput={handleInput}\n      />\n      {alert.show ? <Alert setAlert={setAlert} alert={alert} /> : \"\"}\n\n      <Todos\n        todos={todos}\n        handleEdit={handleEdit}\n        handleComplete={handleComplete}\n        handleRemove={handleRemove}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}